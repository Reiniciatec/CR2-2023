import cyberpi
import time
SAD = [[50,50,0,0,50,50,0,0],[50,49,0,1,49,50,1,0],[50,48,0,2,48,50,2,0],[50,47,0,3,47,50,3,0],[50,46,0,4,46,50,4,0],[50,45,0,5,45,50,5,0],[50,44,0,6,44,50,6,0],[50,43,0,7,43,50,7,0],[50,42,0,8,42,50,8,0],[50,41,0,9,41,50,9,0],[50,40,0,10,40,50,10,0],[50,39,0,11,39,50,11,0],[50,38,0,12,38,50,12,0],[50,37,0,13,37,50,13,0],[50,36,0,14,36,50,14,0],[50,35,0,15,35,50,15,0],[50,34,0,16,34,50,16,0],[50,33,0,17,33,50,17,0],[50,32,0,18,32,50,18,0],[50,31,0,19,31,50,19,0],[50,30,0,20,30,50,20,0],[50,29,0,21,29,50,21,0],[50,28,0,22,28,50,22,0],[50,27,0,23,27,50,23,0],[50,26,0,24,26,50,24,0],[50,25,0,25,25,50,25,0],[50,24,0,26,24,50,26,0],[50,23,0,27,23,50,27,0],[50,22,0,28,22,50,28,0],[50,21,0,29,21,50,29,0],[50,20,0,30,20,50,30,0],[50,19,0,30,19,50,30,0],[50,18,0,30,18,50,30,0],[50,17,0,30,17,50,30,0],[50,16,0,30,16,50,30,0],[50,15,0,30,15,50,30,0],[50,14,0,30,14,50,30,0],[50,13,0,30,13,50,30,0],[50,12,0,30,12,50,30,0],[50,11,0,30,11,50,30,0],[50,10,0,30,10,50,30,0],[50,9,0,30,9,50,30,0],[50,8,0,30,8,50,30,0],[50,7,0,30,7,50,30,0],[50,6,0,30,6,50,30,0],[50,5,0,30,5,50,30,0],[50,4,0,30,4,50,30,0],[50,3,0,30,3,50,30,0],[50,2,0,30,2,50,30,0],[50,1,0,30,1,50,30,0],[50,0,0,30,0,50,30,0],[50,0,0,30,0,50,30,0]]

brillos = [100, 100, 100, 100, 100, 100, 100, 100]
brillos2 = [[0,0,100,0,0,0,100,0], [0,100,0,0,0,100,0,0], [100,0,0,0,100,0,0,0], [0,0,0,100,0,0,0,100]]
normal = [50,50, 0, 0, 50, 50, 0 ,0 ]

def emotion(): 
    cyberpi.ultrasonic2.play("thinking", 1)

def eyes_colors(): 
    cyberpi.ultrasonic2.led_show(brillos, 1)

def eyes_colors2():
    while True:
        cyberpi.ultrasonic2.led_show(brillos2[0], 1)
        time.sleep(0.2)
        cyberpi.ultrasonic2.led_show(brillos2[1], 1)
        time.sleep(0.2)
        cyberpi.ultrasonic2.led_show(brillos2[2], 1)
        time.sleep(0.2)
        cyberpi.ultrasonic2.led_show(brillos2[3], 1)
        time.sleep(0.2)

def sad_eyes():
    for elemento in range(len(SAD)):
        if elemento % 2 == 0: 
            cyberpi.ultrasonic2.led_show(SAD[elemento], 1)
            time.sleep(0.01)
    for elemento in range(len(SAD)):
        if elemento % 2 == 0: 
            cyberpi.ultrasonic2.led_show(SAD[len(SAD)-elemento-1], 1)
            time.sleep(0.01)
    
    
@cyberpi.event.is_press("a")
def callback():
    while True:
        emotion()

@cyberpi.event.is_press("b")
def callback2(): 
    sad_eyes()